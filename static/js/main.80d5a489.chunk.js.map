{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","PlusIcon","className","xmlns","width","height","viewBox","fill","d","PanelHeader","props","onClick","getinfoWithFetch","children","handleToggle","id","onKeyDown","handleKeyDown","isExpanded","PanelBody","title","PanelGroup","role","Panel","state","openDefault","bind","this","setState","event","keyCode","preventDefault","infoData","categories","value","React","Component","useEffect","getcatWithFetch","useState","setinfoData","catData","setcatData","a","fetch","response","json","jsonData","param","Fragment","src","logo","alt","row","i","length","push","generate_elements","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80d5a489.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect} from \"react\";\n\n\n\n\n\nfunction App() {\n\n\n\n\n  const ChucknorrisURLcat = \"https://api.chucknorris.io/jokes/categories\";\n\n  const PlusIcon = () => {\n    return (\n        <span className=\"panel__header-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 16 16\">\n                <path fill=\"currentColor\" d=\"M14,7H9V2A1,1,0,0,0,7,2V7H2A1,1,0,0,0,2,9H7v5a1,1,0,0,0,2,0V9h5a1,1,0,0,0,0-2Z\"/>\n            </svg>\n        </span>\n    )\n  }\n  \n  const MinusIcon = () => {\n    return (\n        <span className=\"panel__header-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 16 16\">\n                <path fill=\"currentColor\" d=\"M14,9H2A1,1,0,0,1,2,7H14a1,1,0,0,1,0,2Z\"/>\n            </svg>\n        </span>\n    )    \n  }\n  \n  const PanelHeader = props => {\n    return (\n        <button\n            className=\"panel__header\"\n            onClick={() => {\n            \n          if(getinfoWithFetch(props.children)){props.handleToggle();\n          }\n            }}\n            id={props.children}\n          \n\n            onKeyDown={props.handleKeyDown}\n         aria-hidden={props.isExpanded}\n        >\n            {props.children}   \n           \n            {props.isExpanded ?<p className=\"panel__header-loading\">Loading...</p> : <PlusIcon/>}\n        </button>\n    )\n  }\n  \n  const PanelBody = props => {\nconst body=props.children;\n   \n    return (\n        <div className=\"panel__body\" aria-hidden={props.isExpanded}>\n            {props.children}\n            {PanelHeader.title}\n        </div>\n    )\n  }\n  \n  const PanelGroup = props => {\n    return (\n        <div className=\"panel-group\" role=\"group\">\n            {props.children}\n        </div>\n    )\n  }\n   \n  class Panel extends React.Component {\n \n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            isExpanded: props.openDefault\n        }\n  \n        this.handleToggle = this.handleToggle.bind(this)\n        this.handleKeyDown = this.handleKeyDown.bind(this)\n    }\n    \n    handleToggle() {\n        this.setState({\n\n            isExpanded: !this.state.isExpanded \n\n        })\n    }\n  \n  \n    handleKeyDown(event) {\n        if(event.keyCode === 40) {\n            event.preventDefault();\n            this.setState({\n                isExpanded: true,\n           \n            })\n        }\n        \n        if(event.keyCode === 38) {\n            event.preventDefault();\n            this.setState({\n                isExpanded: false\n            })\n        }\n    }\n    \n    render() {\n\n        return (\n            <div className=\"panel\">\n                <PanelHeader\n                    handleToggle={this.handleToggle}\n                    handleKeyDown={this.handleKeyDown}\n                    isExpanded={this.state.isExpanded}\n                >\n                    {this.props.title}\n                </PanelHeader>\n                <PanelBody  \n                 isExpanded={this.state.isExpanded}>\n\n               {(infoData.categories==this.props.title)?this.props.title+'-'+infoData.value:null}\n\n                </PanelBody>\n            </div>\n        )\n    }\n  }\n\n  useEffect(() => {\n    getcatWithFetch();\n  }, []);\n\n\n  const [infoData, setinfoData] = useState({});\n\n  const [catData, setcatData] = useState({});\n\n  const getcatWithFetch = async () => {\n    const response = await fetch(ChucknorrisURLcat);\n    const jsonData = await response.json();\n    setcatData(jsonData);\n  };\n  const getinfoWithFetch  = async(param) => {\n    const response = await fetch( \"https://api.chucknorris.io/jokes/random?category=\"+param);\n    const jsonData = await response.json();\n    setinfoData(jsonData);\n};\n  const generate_elements = () => {\n    const row = [];\n    for (var i = 0; i < catData.length; i++) {\n      row.push(\n        <Panel   \n        key={i} title={catData[i]} >       \n        {catData[i]+'-'+infoData.value}\n        </Panel>    \n     );\n    }\n    return row;\n  };\n\n  return (\n    <React.Fragment>\n      <header className=\"App-header\">\n        <h1>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" /> \n          DAP React Chucknorris API Application\n        <img src={logo} className=\"App-logo\" alt=\"logo\" /> \n          </h1>\n          <h2>Categories</h2>\n            <p className=\"lead\">Click on a category to Load Chucknorris.io content</p>\n      </header>\n      <div  className=\"App-body\">\n      <div className=\"wrapper\">      \n      <PanelGroup>\n      {generate_elements()}  \n      </PanelGroup>\n        </div>\n        </div>\n<footer>\n\n<div className=\"footer\">\n    <h3 className='dapfooterright'>Â© Chebet Langat </h3>\n    <h3 className='dapfooterleft'>DAP 2021 Coding Challenge</h3>\n  </div>\n</footer>\n\n        </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}